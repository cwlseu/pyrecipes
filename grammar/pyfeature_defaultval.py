#!/usr/bin/python2.7
#-*-encoding:utf-8-*-
"""
这是关于list的数据类型的理解。

1. 在python中的数据可以分为可变数据类型和不变数据类型。
可变数据类型：像tuple,list,dict之类的变量就是可变数据类型，变量名存储的是一个地址，
该地址指向一个具体的对象，并且不管对变量的值即对象做怎么样的操作，都不会改变变量名存储的地址。
我们把列表作为参数传入一个函数时，在函数内我们对该列表进行了一些改变，由于变量存储的地址没有变
，所以就算我们没有故意通过return语句把该列表传递出来，该列表还是会在函数执行结束后跟着改变的。

2. 函数的默认值为可变数据类型的话，会申请一个变量，这个变量地址是固定的，但是值在函数可被改变，
而且还会影响下次调用。

"""
from pprint import pprint

def f(x, L = []):
	for i in range(x):
		L.append(i*i)
	print(L)
	print(id(L))

# f(2)
# f(2, [1,2,3])
# f(3)

# [0, 1]
# 139664725541736
# [1, 2, 3, 0, 1]
# 139664725491584
# [0, 1, 0, 1, 4]
# 139664725541736


def g(x, s=""):
	for i in range(x):
		s += str("{} ".format(i))
	print(s)
	print(id(x), id(s))


g(2)
ss = "hello"
print(id(ss) - id(g))
g(3, ss)
g(2)

# 0 1
# (31744320, 139992083166672)
# hello0 1 2
# (31744296, 139992083166672)
# 0 1
# (31744320, 139992083166672)
